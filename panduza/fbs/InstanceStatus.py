# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class InstanceStatus(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = InstanceStatus()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsInstanceStatus(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # InstanceStatus
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # InstanceStatus
    def Instance(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # InstanceStatus
    def State(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # InstanceStatus
    def ErrorString(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def InstanceStatusStart(builder):
    builder.StartObject(3)

def Start(builder):
    InstanceStatusStart(builder)

def InstanceStatusAddInstance(builder, instance):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(instance), 0)

def AddInstance(builder, instance):
    InstanceStatusAddInstance(builder, instance)

def InstanceStatusAddState(builder, state):
    builder.PrependUint16Slot(1, state, 0)

def AddState(builder, state):
    InstanceStatusAddState(builder, state)

def InstanceStatusAddErrorString(builder, errorString):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(errorString), 0)

def AddErrorString(builder, errorString):
    InstanceStatusAddErrorString(builder, errorString)

def InstanceStatusEnd(builder):
    return builder.EndObject()

def End(builder):
    return InstanceStatusEnd(builder)
