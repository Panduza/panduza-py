# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Notification(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Notification()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsNotification(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Notification
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Notification
    def Timestamp(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            x = o + self._tab.Pos
            from Timestamp import Timestamp
            obj = Timestamp()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # Notification
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # Notification
    def Source(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # Notification
    def Message(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def NotificationStart(builder):
    builder.StartObject(4)

def Start(builder):
    NotificationStart(builder)

def NotificationAddTimestamp(builder, timestamp):
    builder.PrependStructSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(timestamp), 0)

def AddTimestamp(builder, timestamp):
    NotificationAddTimestamp(builder, timestamp)

def NotificationAddType(builder, type):
    builder.PrependUint16Slot(1, type, 0)

def AddType(builder, type):
    NotificationAddType(builder, type)

def NotificationAddSource(builder, source):
    builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(source), 0)

def AddSource(builder, source):
    NotificationAddSource(builder, source)

def NotificationAddMessage(builder, message):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(message), 0)

def AddMessage(builder, message):
    NotificationAddMessage(builder, message)

def NotificationEnd(builder):
    return builder.EndObject()

def End(builder):
    return NotificationEnd(builder)
